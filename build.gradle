plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.3.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'zeh.challenge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.h2database:h2'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'

    implementation 'org.springdoc:springdoc-openapi-ui:1.4.7'
    implementation 'org.springdoc:springdoc-openapi-hateoas:1.4.7'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.4.7'

    implementation "org.mapstruct:mapstruct:1.4.0.Final"

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.0.Final"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation "org.testng:testng:6.10", "org.easytesting:fest-assert:1.4"
}

tasks.withType(JavaCompile) {
    options.fork = true

    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

test {
    useJUnitPlatform()
}